"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A datetime and timezone string in ISO 8601 format `Y-m-dTH:i:sO`, e.g. `2020-04-20T13:53:12+02:00`."
scalar DateTimeTz @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTimeTz")

type Mutation

type Query {
  users: [User!]! @middleware(checks: ["auth:api"]) @paginate(defaultCount: 100000) @guard(with: ["api"])
  #users: [User!]! @paginate(defaultCount: 100000)
  user(id: ID @eq): User @find @guard(with: ["api"])
  me: User! @auth

  tipoUsuarios: [TipoUsuario!]! @paginate(defaultCount: 10)
  tipoUsuario (id: ID @eq): TipoUsuario @find
     
  unidades: [Unidade!]! @paginate(defaultCount: 1000)
  unidade(id: ID @eq): Unidade @find @guard(with: ["api"])
  unidadesByAdmin(admin_id: ID! @eq): Unidade @find @guard(with: ["api"])
 #unidadesByAdmin2(admin_id: ID! @eq): [Unidade] @find @inject(context: "user.id", name: "admin_id") @guard(with: ["api"])

  bloques: [Bloque!]! @paginate(defaultCount: 100000) @guard(with: ["api"])
  bloque(id: ID @eq): Bloque @find @guard(with: ["api"])
      
  aptos: [Apto!]! @paginate(defaultCount: 1000000) @guard(with: ["api"])
  apto(id: ID @eq): Apto @find @guard(with: ["api"])
      
  tipoAptos: [TipoApto!]! @paginate(defaultCount: 10000) @guard(with: ["api"])
  tipoApto(id: ID @eq): TipoApto @find @guard(with: ["api"])

  facturas: [Factura!] @paginate(defaultCount: 1000000) @guard(with: ["api"])
  factura(id: ID @eq): Factura @find @guard(with: ["api"])

  pagos: [Pago!] @paginate(defaultCount: 1000000) @guard(with: ["api"])
  pago(id: ID @eq): Pago @find @guard(with: ["api"])
}

type User {
    id: ID!
    name: String    
    email: String!
    dni: String
    telefono: String
    email_verified_at: DateTime
    password: String! 
    active: Boolean!
    tipo_usuario_id: Int
    tipo: TipoUsuario @belongsTo(relation: "tipo_usuario")
    #admin: User! @belongsTo(relation: "admin")
    unidades_admin: [Unidade] @hasMany(relation: "unidades_admin")
    created_at: DateTime
    updated_at: DateTime
}

type TipoUsuario {
    id: ID!
    tipo_usuarios: String!
    users: [User!] @hasMany(relation: "users")
  }

type Unidade {
    id: ID!
    nombre: String!
    direccion: String!
    telefono: String!
    nit: String!
    active: Boolean!
    admin_id: ID!    
    admin: User! @belongsTo(relation: "admin")
    aptos: [Apto!]! @hasMany(relation: "aptos")
    bloques: [Bloque!]! @hasMany(relation: "bloques")
  }

  type Bloque {
    id: ID!
    nombre: String!
    unidad_id: ID!
    unidad: Unidade! @belongsTo(relation: "unidad")
    aptos: [Apto!] @hasMany(relation: "aptos")
  }

  type Apto {
    id: ID!
    nomenclatura: String!
    unidad_id: ID!
    bloque_id: ID!
    tipo_apto_id: ID!
    propietario_id: ID!
    arrendatario_id: ID
    unidad: Unidade! @belongsTo(relation: "unidad")
    bloque: Bloque! @belongsTo(relation: "bloque")
    tipoapto: TipoApto! @belongsTo(relation: "tipoapto")
    propietario: User! @belongsTo(relation: "propietario")
    arrendatario: User @belongsTo(relation: "arrendatario")
    facturas: [Factura] @hasMany(relation: "facturas")
    pagos: [Pago] @hasMany(relation: "pagos")
  }

   type TipoApto {
    id: ID!
    tipo_apto: String!
    cobro: Float!
    vigencia: Int!
    metros: Int!
    unidad_id: ID!
    unidad: Unidade! @belongsTo(relation: "unidad")
    aptos: [Apto!] @hasMany(relation: "aptos")
  }

  type Pago {
    id:ID!
    factura_id: ID
    apto_id: ID!
    valor: Float!
    modo: String
    fecha_pago: String
    estado: Boolean
    apto: Apto! @belongsTo(relation: "apto")
   } 

   type Factura { 
    id:ID!
    consecutivo: Int, 
    monto_total_fact: Float, 
    mes_ano: String, 
    nota: String, 
    apto_id: ID!, 
    estado: Boolean
    apto: Apto! @belongsTo(relation: "apto")
   } 


 type Mutation { 


    updateUser(
    	id: ID!, 
        name: String, 
    	email: String, 
    	dni: String, 
    	telefono: String,  
    	active: Boolean, 
    	tipo_usuario_id: ID) : User @update @guard(with: ["api"])

    # createUser(
    #     name: String!,  
    # 	email: String!, 
    # 	dni: String!, 
    # 	telefono: String!,  
    # 	password: String! @hash, 
    # 	active: Boolean!, 
    # 	tipo_usuario_id: ID!) : User! @create

    deleteUser(id: ID!) : User! @delete @guard(with: ["api"])

    updateTipoUsuario(
    	id: ID!, 
     	tipo_usuarios: String) : TipoUsuario @update @guard(with: ["api"])

    createTipoUsuario(tipo_usuarios: String) : TipoUsuario! @create @guard(with: ["api"])

    deleteTipoUsuario(id: ID!) : TipoUsuario! @delete @guard(with: ["api"])


    updateUnidad(
    	id: ID!, 
    	nombre: String, 
    	direccion: String, 
    	telefono: String, 
        nit: String,
    	active: Boolean) : Unidade! @update @inject(context:"user.id",name:"admin_id") @guard(with: ["api"]) 

    createUnidad(
    	nombre: String, 
    	direccion: String, 
    	telefono: String,
        nit: String, 
    	active: Boolean) : Unidade! @create @inject(context:"user.id",name:"admin_id") @guard(with: ["api"]) 

    deleteUnidad(id: ID!) : Unidade! @delete @guard(with: ["api"])
    
    updateBloque(
    	id: ID!, 
    	nombre: String, 
    	unidad_id: Int) : Bloque! @update @guard(with: ["api"])

    createBloque(
    	nombre: String, 
    	unidad_id: Int) : Bloque! @create @guard(with: ["api"])

    deleteBloque(id: ID!) : Bloque! @delete @guard(with: ["api"])

    updateApto(
    	id: ID!, 
    	nomenclatura: String, 
    	unidad_id: Int, 
    	bloque_id: Int, 
    	tipo_apto_id: Int, 
    	propietario_id: Int,  
    	arrendatario_id: Int) : Apto! @update @guard(with: ["api"])

    createApto(
    	nomenclatura: String, 
    	unidad_id: Int, 
    	bloque_id: Int, 
    	tipo_apto_id: Int, 
    	propietario_id: Int,  
    	arrendatario_id: Int) : Apto! @create @guard(with: ["api"])

    deleteApto(id: ID!) : Apto! @delete @guard(with: ["api"])

    
    updateTipoApto(
    	id: ID!, 
    	tipo_apto: String, 
    	cobro: Float, 
    	vigencia: Int, 
    	metros: Int, 
    	unidad_id: Int) : TipoApto! @update @guard(with: ["api"])

    createTipoApto(
    	tipo_apto: String, 
    	cobro: Float, 
    	vigencia: Int, 
    	metros: Int, 
    	unidad_id: ID!) : TipoApto! @create @guard(with: ["api"])

    deleteTipoApto(id: ID!) : TipoApto! @delete @guard(with: ["api"])


    updateFactura( 
        id: ID!, 
        consecutivo: Int, 
        monto_total_fact: Float, 
        mes_ano: String, 
        nota: String, 
        apto_id: ID!, 
        estado: Boolean) : Factura! @update @guard(with: ["api"])

    createFactura(
        consecutivo: Int, 
        monto_total_fact: Float, 
        mes_ano: String, 
        nota: String, 
        apto_id: ID!, 
        estado: Boolean) : Factura! @create @guard(with: ["api"])

    deleteFactura(id: ID!) : Factura! @delete @guard(with: ["api"])


     updatePago(
        id: ID!,
        factura_id: ID,  
        apto_id: ID!, 
        valor: Float, 
        modo: String, 
        fecha_pago: String, 
        estado: Boolean) : Pago! @update @guard(with: ["api"])

    createPago(        
        factura_id: ID, 
        apto_id: ID!, 
        valor: Float!, 
        modo: String, 
        fecha_pago: String!, 
        estado: Boolean) : Pago! @create @guard(with: ["api"])
    #Unidade! @update @inject(context:"user.id",name:"admin_id") @guard(with: ["api"]) 

    deletePago(id: ID!) : Pago! @delete @guard(with: ["api"])


}
